###############################################
# Title:            Put and update domains IP to Firewall addresses list
# Author:        Sergej Sevrjuk
# Date:           2019-10-03
# Tested on:  6,45
# How to use: Copy to Scheduler
###############################################


###############################################
#Script Settings
###############################################

:local domainNames {"admin1.ddns.net"; "admin2.ddns.net"; "admin3.ddns.net"}
:local listName "Admins"

#Variable for log messages
#Log level values: 0 for none, 1 for warning, 2 for all
:local logLevel 0
:local logScriptName "DDNSUpdateAddressLists"

###############################################


:foreach domainName in=$domainNames do={
    :if ($logLevel >= 2) do={ :log info ($logScriptName . ": execute for domain " .  $domainName)}
    
    :local recordCount [/ip firewall address-list print count-only where comment=$domainName and list=$listName]
    :if ($recordCount > 1) do={
        :if ($logLevel >= 1) do={ :log error ($logScriptName . ": Multiple Address Lists for record " . $domainName)}
    } else={
        :local domainIP [:resolve $domainName]
        :if ($logLevel >= 2) do={ :log info ($logScriptName . ": " .  $domainName . " -> IP address (" . $domainIP . ")")}
    
        :if ($recordCount = 0) do={
            :if ($logLevel >= 2) do={ :log info ($logScriptName . ": Create new")}
            /ip firewall address-list add address=$domainIP comment=$domainName list=$listName
        } else={
            :if ($logLevel >= 2) do={ :log info ($logScriptName . ": Update existing")}
            :local record [/ip firewall address-list find where comment=$domainName and list=$listName]
            :if ([/ip firewall address-list get $record address] != $domainIP) do={
                /ip firewall address-list set $record address=$domainIP
            }
        }
    }    
}

:if ([/ip firewall address-list print count-only where any comment and list=$listName] > [:len $domainNames]) do={
    :if ($logLevel >= 2) do={ :log info ($logScriptName . ": Delete other")}
    
    :local records [/ip firewall address-list find where any comment and list=$listName]
    :foreach record in=$records do={
        :if ($logLevel >= 2) do={ :log info ($logScriptName . ": Check ".[/ip firewall address-list get $record comment])}
        :local deleteRecord 1

        :foreach domainName in=$domainNames do={
            :if ([/ip firewall address-list get $record comment]=$domainName) do={
                :set $deleteRecord 0
            }
        }

        :if ($deleteRecord=1) do={
             :if ($logLevel >= 2) do={ :log info ($logScriptName . ": Delete ".[/ip firewall address-list get $record comment])}
             /ip firewall address-list remove $record
        }
    }
}

:if ($logLevel >= 2) do={ :log info ($logScriptName . ": executed successfully!")}
